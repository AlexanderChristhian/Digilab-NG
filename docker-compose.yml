version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=digilearn_owner
      - POSTGRES_PASSWORD=npg_yCXzw8Tr6Hqk
      - POSTGRES_DB=digilearn
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      no_cache: true
    container_name: backend
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgresql://digilearn_owner:npg_yCXzw8Tr6Hqk@postgres:5432/digilearn
      - PORT=5000
      - JWT_SECRET=technoskill_workshop_secret_key_2024
      - REDIS_URL=redis://redis:6379
      - CLOUDINARY_CLOUD_NAME=dnkkk7pgw
      - CLOUDINARY_API_KEY=612347442264637
      - CLOUDINARY_API_SECRET=tbXNmU3pq5kvXWa0tttRWevUChE
      - NODE_ENV=development
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      no_cache: true
    container_name: frontend
    restart: always
    ports:
      - "2000:80"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=/api
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
